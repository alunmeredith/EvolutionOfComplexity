{
    "contents" : "library(data.table)\nfit <- data.frame()\nj = 0\nmaxIter = 100000\nresults <- data.frame(method=character(),popSize=integer(),decayRate=numeric(),target=character(),solution=character(),iterations=numeric(),fitness=integer(),loopNum=integer(),stringsAsFactors = FALSE)\nsource(\"EvolutionaryAlgorithm.R\")\n\n## Scripting runs to test hypothesis\n\n# Question 1. Is it true that crossover is faster than no crossover?\nset.seed(99) #set the seed for reproducibility\nfor (i in 1:5)\n{\n  j <<- j + 1\n  results[nrow(results)+1,] <- crossover()\n  print(tail(results,1))\n  \n  j <<- j + 1\n  results[nrow(results)+1,] <- noCrossover()\n  print(tail(results,1)) \n}\n\n# Question 1b. If the problem was more difficult do you think the answer to the hypothesis would be the same?\nphrases = c(\"Methinks\", \"Methinks it\", \"Methinks it is like\", \"Methinks it is like a weasel\")\nfor (k in 1:3){\n  for (i in 1:length(phrases))\n  {\n    j <<- j + 1\n    results[nrow(results)+1,] <- crossover(phrase=phrases[i])\n    print(tail(results,1))\n    \n    j <<- j + 1\n    results[nrow(results)+1,] <- noCrossover(phrase=phrases[i])\n    print(tail(results,1))\n  }\n}\n\n\n# Question 2. Does using a higher mutation rate affect the result? Why?\nmin = 5 # range of decay rates = 1/min average decays -> min average decays\nfor (i in c(.2,.4,.6,.8,1,2,3,4,5))\n{\n  j <<- j + 1\n  results[nrow(results)+1,] <- crossover(decayRate=(i/(L)))\n  print(tail(results,1))\n  \n  j <<- j + 1\n  results[nrow(results)+1,] <- noCrossover(decayRate=(i/(L)))\n  print(tail(results,1))\n}\n\n# Question 2b. How does the best of the GAs compare to the speed of the mutation hill-climber\nfor (i in 1:5)\n{\n  j <<- j + 1\n  results[nrow(results)+1,] <- hillClimber()\n  print(tail(results,1))\n}",
    "created" : 1445295726517.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3673218727",
    "id" : "A858B379",
    "lastKnownWriteTime" : 1445201596,
    "path" : "~/Work/DataScience/Southampton/EvolutionofComplexity/Evolutionary Algorithm Scripting.R",
    "project_path" : "Evolutionary Algorithm Scripting.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}