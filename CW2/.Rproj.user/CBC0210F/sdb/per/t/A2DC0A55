{
    "contents" : "\n# Initialise variables\nN <- 4000\ngroupSizeSmall <- 4L\ngroupSizeLarge <- 40L\nR = 1\nRsmall = 4\nRlarge = 50\n# Rlarge = 1.05^groupSizeLarge * groupSizeLarge\n# Rsmall = 1.05^groupSizeSmall * groupSizeSmall\nt <- 4\nGc <- 0.018\nGs <- 0.02\nCc <- 0.1\nCs <- 0.2\nTgen <- 120\nK = 0.1\nsource('reproductionHeader.r')\n\n\n#---------------------------------------\n#-- STEP 1. INITIALISE N INDIVIDUALS ---\n#---------------------------------------\n\n# Because we are using R we describe individuals in a vectorised mannor.\n# Each element of the vector is an allele, with a 3rd variable stating\n# which group the group and 4th the size of the genotype. \n\ndispersedPop <- data.table(group = c(\"small\", \"large\"), \n                           greedy = c(N/4, N/4),\n                           coop = c(N/4, N/4))\n\n# Initialise population table with maximum number of group sizes\nmaxGroups <- floor(N/groupSizeSmall)\npopulation <- data.table(id = 1:maxGroups, group = NA_character_, \n                         greedy = NA_real_, coop = NA_real_)\n\ngenotypes <- data.table(greedySmall = rep(NA_real_, Tgen + 1) ,\n                        greedyLarge = NA_real_,coopSmall = NA_real_,\n                        coopLarge = NA_real_)\ngenotypes[1, greedySmall := N/4]\ngenotypes[1, greedyLarge := N/4]\ngenotypes[1, coopSmall := N/4]\ngenotypes[1, coopLarge := N/4]\n\n\n\nfor (j in 1:Tgen) { # iterate for T generations\n  groupFormation()\n  for (i in 1:t) reproduction() # wait time t\n  dispersedPop <- buildMigrantPool()\n  print(dispersedPop)\n  population <- data.table(id = 1:maxGroups, group = NA_character_,\n                           greedy = NA_real_, coop = NA_real_)\n  \n  # Save population values after each generation\n  x <- dispersedPop[group == \"small\", greedy]\n  if (length(x) == 0) x = 0\n  genotypes[j + 1, greedySmall := x]\n  \n  x <- dispersedPop[group == \"large\", greedy]\n  if (length(x) == 0) x = 0\n  genotypes[j + 1, greedyLarge := x]\n  \n  x <- dispersedPop[group == \"small\", coop]\n  if (length(x) == 0) x = 0\n  genotypes[j + 1, coopSmall := x]\n  \n  x <- dispersedPop[group == \"large\", coop]\n  if (length(x) == 0) x = 0\n  genotypes[j + 1, coopLarge := x]\n  \n  # Print current state to console\n  print(paste(\"Generation:\", j))\n  print(genotypes[j])\n}\n\n\n#---------------------------------------\n#--------------- Draw plots ---------------\n#---------------------------------------\npng(filename = paste(\"./bin/\", \"Figure2\", \".png\", sep = \"\"),\n    width = 900, height = 360)\nlibrary(gridExtra)\ngenotypes$index <- 0:Tgen\n\n\nscience_theme = theme(panel.grid.major \n                      = element_line(size = 0.5, color = \"grey\"), \n                      panel.grid.minor.y = element_blank(),\n                      axis.line = element_line(size = 0.7, \n                                               color = \"black\"), \n                      legend.position = c(0.7,0.5), \n                      text = element_text(size = 26))\n\ngraph1 <- ggplot(genotypes, aes(x = index, y = value)) +\n  geom_line(aes(y = greedySmall/N, col = \"Selfish + Small\", \n                linetype = \"Selfish + Small\", \n                size = \"Selfish + Small\")) +\n  geom_line(aes(y = greedyLarge/N, col = \"Selfish + Large\", \n                linetype = \"Selfish + Large\", \n                size = \"Selfish + Large\")) + \n  geom_line(aes(y = coopSmall/N, col = \"Cooperative + Small\", \n                linetype = \"Cooperative + Small\", \n                size = \"Cooperative + Small\")) +\n  geom_line(aes(y = coopLarge/N,col = \"Cooperative + Large\", \n                linetype = \"Cooperative + Large\", \n                size = \"Cooperative + Large\")) +\n  xlab(\"Generation\") +\n  ylab(\"Global genotype frequencey\") +\n  theme_bw() +\n  science_theme +\n  scale_x_continuous( breaks = c(0,20,40,60,80,100,120),\n                      limits = c(0,120)) +\n  scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0),\n                     limits = c(0,1)) +\n  scale_colour_manual(\"\", \n                      breaks = c(\"Selfish + Small\", \"Selfish + Large\", \n                                 \"Cooperative + Small\", \n                                 \"Cooperative + Large\"),\n                      values = c(\"Dark grey\", \"Dark grey\", \n                                 \"Black\", \"Black\")) +\n  scale_linetype_manual(\"\",\n                        breaks = c(\"Selfish + Small\", \n                                   \"Selfish + Large\", \n                                   \"Cooperative + Small\", \n                                   \"Cooperative + Large\"),\n                        values = c(3, 1, 3, 1)) +\n  scale_size_manual(\"\", \n                    breaks = c(\"Selfish + Small\", \"Selfish + Large\", \n                               \"Cooperative + Small\", \n                               \"Cooperative + Large\"),\n                    values = rep(1.4,4))\n## plot2\nLarge <- apply(genotypes, 1, function(x) {\n  sum((x[\"greedyLarge\"] + x[\"coopLarge\"]) / sum(x))\n})\nGreedy <- apply(genotypes, 1, function(x) {\n  sum((x[\"greedyLarge\"] + x[\"greedySmall\"]) / sum(x))\n})\nSecondplot <- data.frame(Large = Large, Greedy = Greedy)\n\ngraph2 <- ggplot(data = Secondplot, \n                 aes(y = seq(0,1,0.2), x = seq(1,120,20))) +\n  geom_line(aes(y = Large, x = 1:length(Large), \n                linetype = \"Large group size\", \n                size = \"Large group size\",\n                col = \"Large group size\")) +\n  geom_line(aes(y = Greedy, x = 1:length(Greedy), \n                linetype = \"Selfish resource usage\", \n                size = \"Selfish resource usage\",\n                col = \"Selfish resource usage\")) + \n  theme_bw() +  \n  science_theme +\n  scale_linetype_manual(\"\", \n                        breaks = c(\"Large group size\", \n                                   \"Selfish resource usage\"),\n                        values = c(3,1)) +\n  scale_size_manual(\"\", \n                    breaks = c(\"Large group size\", \n                               \"Selfish resource usage\"),\n                    values = c(1.2, 1.2)) +\n  scale_color_manual(\"\",\n                     breaks = c(\"Large group size\", \n                                \"Selfish resource usage\"),\n                     values = c(\"Black\", \"Dark grey\")) +\n  xlab(\"Generation\") +\n  ylab(\"Global frequency\") +\n  scale_x_continuous(breaks = seq(0,120,20), \n                     limits = c(0,120)) + \n  scale_y_continuous(breaks = seq(0,1,0.2),\n                        limits = c(0,0.8))\ngrid.arrange(graph2, graph1, nrow=1, ncol=2)\ndev.off()\n\nsave(genotypes, file = paste0(\"./bin/\" ,name, \".Rda\"))",
    "created" : 1451999031522.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1034107312",
    "id" : "A2DC0A55",
    "lastKnownWriteTime" : 1452007631,
    "path" : "~/Southampton/EvolutionOfComplexity/CW2/reproductionScript.R",
    "project_path" : "reproductionScript.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}